import kotlin.String

/**
 * Generated by [gradle-kotlin-dsl-libs](https://github.com/jmfayard/gradle-kotlin-dsl-libs)
 *
 * Run again
 *   `$ ./gradlew syncLibs`
 * to update this file */
object Libs {
    /**
     * [aapt2 website](https://developer.android.com/studio) */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * [appcompat website](http://developer.android.com/tools/extras/support-library.html) */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * [gradle website](https://developer.android.com/studio) */
    const val com_android_tools_build_gradle: String =
            "com.android.tools.build:gradle:" + Versions.com_android_tools_build_gradle

    const val com_diffplug_gradle_spotless_gradle_plugin: String =
            "com.diffplug.gradle.spotless:com.diffplug.gradle.spotless.gradle.plugin:" + Versions.com_diffplug_gradle_spotless_gradle_plugin

    /**
     * [compiler website](https://github.com/bumptech/glide) */
    const val com_github_bumptech_glide_compiler: String =
            "com.github.bumptech.glide:compiler:" + Versions.com_github_bumptech_glide_compiler

    /**
     * [constraintlayout website](http://tools.android.com) */
    const val constraintlayout: String =
            "androidx.constraintlayout:constraintlayout:" + Versions.constraintlayout

    /**
     * [core-ktx website](http://developer.android.com/tools/extras/support-library.html) */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

    /**
     * [core-testing website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val core_testing: String = "androidx.arch.core:core-testing:" + Versions.core_testing

    const val databinding_adapters: String =
            "androidx.databinding:databinding-adapters:" + Versions.databinding_adapters

    /**
     * [databinding-common website](https://developer.android.com/studio) */
    const val databinding_common: String =
            "androidx.databinding:databinding-common:" + Versions.databinding_common

    /**
     * [databinding-compiler website](https://developer.android.com/studio) */
    const val databinding_compiler: String =
            "androidx.databinding:databinding-compiler:" + Versions.databinding_compiler

    const val databinding_runtime: String =
            "androidx.databinding:databinding-runtime:" + Versions.databinding_runtime

    /**
     * [espresso-contrib website](https://developer.android.com/testing) */
    const val espresso_contrib: String =
            "androidx.test.espresso:espresso-contrib:" + Versions.espresso_contrib

    /**
     * [espresso-core website](https://developer.android.com/testing) */
    const val espresso_core: String =
            "androidx.test.espresso:espresso-core:" + Versions.espresso_core

    /**
     * [espresso-intents website](https://developer.android.com/testing) */
    const val espresso_intents: String =
            "androidx.test.espresso:espresso-intents:" + Versions.espresso_intents

    /**
     * [glide website](https://github.com/bumptech/glide) */
    const val glide: String = "com.github.bumptech.glide:glide:" + Versions.glide

    /**
     * [gson website](https://github.com/google/gson) */
    const val gson: String = "com.google.code.gson:gson:" + Versions.gson

    const val jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin: String =
            "jmfayard.github.io.gradle-kotlin-dsl-libs:jmfayard.github.io.gradle-kotlin-dsl-libs.gradle.plugin:" + Versions.jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin

    /**
     * [junit website](http://junit.org) */
    const val junit: String = "junit:junit:" + Versions.junit

    /**
     * [kotlin-android-extensions website](https://kotlinlang.org/) */
    const val kotlin_android_extensions: String =
            "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.kotlin_android_extensions

    /**
     * [kotlin-annotation-processing-gradle website](https://kotlinlang.org/) */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" + Versions.kotlin_annotation_processing_gradle

    /**
     * [kotlin-gradle-plugin website](https://kotlinlang.org/) */
    const val kotlin_gradle_plugin: String =
            "org.jetbrains.kotlin:kotlin-gradle-plugin:" + Versions.kotlin_gradle_plugin

    /**
     * [kotlin-stdlib-jdk8 website](https://kotlinlang.org/) */
    const val kotlin_stdlib_jdk8: String =
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" + Versions.kotlin_stdlib_jdk8

    /**
     * [legacy-support-v4 website](http://developer.android.com/tools/extras/support-library.html) */
    const val legacy_support_v4: String =
            "androidx.legacy:legacy-support-v4:" + Versions.legacy_support_v4

    /**
     * [lifecycle-extensions website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val lifecycle_extensions: String =
            "androidx.lifecycle:lifecycle-extensions:" + Versions.lifecycle_extensions

    /**
     * [lint-gradle website](https://developer.android.com/studio) */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * [material website](http://developer.android.com/tools/extras/support-library.html) */
    const val material: String = "com.google.android.material:material:" + Versions.material

    /**
     * [navigation-fragment-ktx website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val navigation_fragment_ktx: String =
            "android.arch.navigation:navigation-fragment-ktx:" + Versions.navigation_fragment_ktx

    /**
     * [navigation-safe-args-gradle-plugin website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val navigation_safe_args_gradle_plugin: String =
            "android.arch.navigation:navigation-safe-args-gradle-plugin:" + Versions.navigation_safe_args_gradle_plugin

    /**
     * [navigation-ui-ktx website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val navigation_ui_ktx: String =
            "android.arch.navigation:navigation-ui-ktx:" + Versions.navigation_ui_ktx

    /**
     * [recyclerview website](http://developer.android.com/tools/extras/support-library.html) */
    const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

    /**
     * [room-compiler website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val room_compiler: String = "androidx.room:room-compiler:" + Versions.room_compiler

    /**
     * [room-runtime website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val room_runtime: String = "androidx.room:room-runtime:" + Versions.room_runtime

    /**
     * [uiautomator website](https://developer.android.com/testing) */
    const val uiautomator: String = "androidx.test.uiautomator:uiautomator:" + Versions.uiautomator

    /**
     * [work-runtime-ktx website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val work_runtime_ktx: String =
            "android.arch.work:work-runtime-ktx:" + Versions.work_runtime_ktx
}
